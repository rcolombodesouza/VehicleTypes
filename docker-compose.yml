services:

  # DATABASE POSTGRESQL
  postgres:
    image: postgres:latest
    container_name: postgresql
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: vehicle_types
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - vehicletype_network
    restart: always

  # PGADMIN TO ACCESS POSTGRESQL
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.com
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - vehicletype_network
    restart: always

  # REDIS TO CACHE DATA
  #To make sure your cache is being written to redis run the command docker exec -it redis sh. After that redis-cli and keys *
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    networks:
      - vehicletype_network
    restart: always

  # PROMETHEUS USED FOR OBSERVABILITY
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./vehicletype-observability-adapter/src/main/resources/config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - vehicletype_network
    restart: always

  # JAEGER USED FOR OBSERVABILITY
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411
    volumes:
      - jaeger-data:/jaeger
    networks:
      - vehicletype_network
    restart: always

  # COLLECTS METRICS FOR THE SYSTEM
  otel-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: otel-collector
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus' metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
    volumes:
      - ./vehicletype-observability-adapter/src/main/resources/config/otel/otel-collector-config.yml:/etc/otel-collector-config.yml
    command: ["--config=/etc/otel-collector-config.yml"]
    networks:
      - vehicletype_network
    restart: always

  # GRAFANA USED FOR OBSERVABILITY
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    networks:
      - vehicletype_network
    restart: always

networks:
  vehicletype_network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:
    driver: local
  prometheus_data:
  grafana_data:
  jaeger-data: