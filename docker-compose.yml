services:

  # DATABASE POSTGRESQL
  postgres:
    image: postgres:latest
    container_name: postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: vehicle_types
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - vehicletype_network
    restart: always

  # PGADMIN TO ACCESS POSTGRESQL
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.com
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - vehicletype_network
    restart: always

  # REDIS TO CACHE DATA
  #To make sure your cache is being written to redis run the command "docker exec -it redis sh". After that "redis-cli" and "keys *".
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - vehicletype_network
    restart: always

  # ELASTICSEARCH USED FOR OBSERVABILITY
  elasticsearch:
    image: elasticsearch:8.15.3
    container_name: elasticsearch
    ports:
      - "9200:9200"
    networks:
      - vehicletype_network
    volumes:
      - esdata:/usr/share/elasticsearch/data
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
    restart: always

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    ports:
      - "4317:4317"  # gRPC
      - "4318:4318" # HTTP
    volumes:
      - ./vehicletype-observability-adapter/src/main/resources/otel/otel-collector-config.yml:/etc/otel-collector-config.yml
    command: ["--config=/etc/otel-collector-config.yml"]
    restart: always
    networks:
      - vehicletype_network


#  # APMSERVER MAKES USE OF OPENTELEMETRY TO EXTRACT METRICS, TRACES AND LOGS FROM THE APPLICATION
#  apm-server:
#    image: elastic/apm-server:8.15.3
#    container_name: apm-server
#    environment:
#      ELASTICSEARCH_HOST: elasticsearch:9200
#      ELASTIC_APM_ACTIVE: true
#      ELASTIC_APM_SERVER_URL: http://localhost:8200
#    ports:
#      - "8200:8200"
#    depends_on:
#      - elasticsearch
#    networks:
#      - vehicletype_network
#    restart: always

  # KIBANA TO SHOW THE COLLECTED DATA FROM ELASTICSEARCH AND APMSERVER
  kibana:
    image: kibana:8.15.3
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_PASSWORD: password
    ports:
      - "5601:5601"
    networks:
      - vehicletype_network
    restart: always

networks:
  vehicletype_network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:
    driver: local
  esdata:
    driver: local